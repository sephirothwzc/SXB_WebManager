
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_Layout.cshtml";
}
<style type="text/css">
    /*配合control-group才有效*/
    .ng-pristine {
        border: solid black 1px;
    }

    .ng-diry {
        border: solid black 3px;
    }

    .ng-valid.ng-dirty {
        border: solid green 3px;
    }

    .ng-invalid.ng-dirty {
        border: solid red 3px;
    }

    .inputwidth {
        width: 200px;
    }
</style>

<p>新增SYS_USER</p>
<div ng-app="app_CreateUser" name="createuser" id="createuser" ng-controller="MainCtrl">
    <form name="CreateForm" novalidate>
        <div class="form-group">
            <label>用户名</label>
            <input name="username" type="text" ng-model="user.USERNAME" class="form-control inputwidth" required />
            <div class="alert alert-danger" role="alert" ng-show="showError(CreateForm.username,'required')">*必填项目</div>
        </div>
        <div class="form-group">
            <label>用户编号</label>
            <input name="usercode" type="text" ng-model="user.USERCODE" class="form-control inputwidth" required />
            <div class="alert alert-danger" role="alert" ng-show="showError(CreateForm.usercode,'required')">*必填项目</div>
        </div>
        <div class="form-group">
            <label>密码</label>
            <input type="text" name="password" ng-model="user.PASSWORD" class="form-control inputwidth" required />
            <div class="alert alert-danger" role="alert" ng-show="showError(CreateForm.password,'required')">*必填项目</div>
            <div class="alert alert-danger" role="alert" ng-show="user.PASSWORD != RPWD">确认密码与密码不一致</div>
        </div>
        <div class="form-group">
            <label>确认密码</label>
            <input type="text" ng-model="RPWD" class="form-control inputwidth" />
        </div>
        <div class="form-group">
            <label>备注</label>
            <input type="text" ng-model="user.REMARK" class="form-control inputwidth" />
        </div>
        <button class="btn btn-default" ng-disabled="!canSave()" ng-click="Create()">提交</button>
    </form>
</div>

<p>表单重置</p>
<form ng-app="app_revert" name="revertform" id="revertform" ng-controller="MainCtrl">
    <label>用户名</label>
    <input type="text" ng-model="user.USERNAME" required />
    <label>用户编码</label>
    <input type="text" ng-model="user.USERCODE" />

    <button ng-click="add()">保存</button>
    <button ng-click="revert()">重置</button>
</form>

<p>
    form表单验证,对象选取 取决于name 不取决于id,novalidate关闭浏览器自带验证<br />
    ng-include 的 src 作为字符串存在，所以需要加'' 支持 路径或者 ng-template 的 id<br />
    *ng-template 模板文件需要在 ng-app 中包裹否则404
</p>
<form id="userInfo" name="userInfoForm" ng-app="app_formError" ng-controller="MainCtrl" novalidate>
    <div class="control-group" ng-class="getCssClasses(userInfoForm.email)">
        <label>邮箱</label>
        <input type="email" ng-model="user.EMAIL" name="email" required />

        <span ng-show="showError(userInfoForm.email,'email')">必须输入一个合法的邮箱</span>
        <span ng-show="showError(userInfoForm.email,'required')">邮箱为必填项目</span>

        <ng-include src="'passwordform'"></ng-include>

        子表单重复项-字符串按值传递，所以ngRepeat区块中的字符串并非是对数组中字符串的引用，也就是说，修改输入框中的值时，数组并不会更新。
        <div ng-repeat="website in user.websites">
            <input type="url" ng-model="website.url" />
            <button ng-click="remove($index)">x</button>
        </div>
        <button ng-click="addwebsite()">新增网址</button>

        <input type="button" ng-disabled="!canSave()" value="保存" />
    </div>

    <script type="text/ng-template" id="passwordform">
        <ng-form name="passwordF">
            <div ng-show="user.PASSWORD != user.PASSWORD2">
                密码不一致
            </div>
            <label>密码</label>
            <input ng-model="user.PASSWORD" type="password" required />
            <label>确认密码</label>
            <input ng-model="user.PASSWORD2" type="password" required />
        </ng-form>
    </script>
</form>

<p>无form表单</p>

<div ng-app="app_add" ng-controller="newitem" class="control-group" id="app_add">
    <h1>添加用户</h1>
    <label>用户名</label>
    <input type="text" ng-model="tuser.USERNAME" ng-required="true" />

    <label>密码</label>
    <input type="password" ng-model="tuser.PASSWORD" />

    <label>确认密码</label>
    <input type="password" ng-model="repeatPASSWORD" />

    <label>编号</label>
    <input type="text" ng-model="tuser.USERCODE" />

    <label>备注</label>
    <input type="text" ng-model="tuser.REMARK" />

    <pre ng-bind="tuser | json"></pre>

    <label>选择对象</label>
    <select ng-model="selName1" ng-options="user.USERNAME+' '+user.USERCODE for user in users" multiple="multiple"></select>
    {{selName1}}
    <label>只选名字</label>
    <select ng-model="selName2" ng-options="user.USERNAME as user.USERNAME+' '+user.USERCODE for user in users"></select>
    {{selName2}}
    <label>分组显示</label>
    <select ng-model="selName3" ng-options="user.USERNAME as user.USERCODE group by user.USERCODE for user in users"></select>
    {{selName3}}

    <label>对象数据源</label>
    <select ng-model="byCode" ng-options="code as name for (code,name) in countriesByCode"></select>
    {{byCode}}
</div>

<div id="test2" ng-app="sxb">
    <table class="table table-bordered table-striped" ng-controller="GetSYS_USER">
        <thead>
            <tr>
                <th>名称</th>
                <th>编码</th>
            </tr>
        </thead>
        <tbody ng-repeat="user in itemuser =( users | pagination:pageHelper.pageNo:pageHelper.pageSize)" ng-click="selectUser(user)" ng-switch on="isSelected(user)">
            <tr>
                <td>{{user.USERNAME}}</td>
                <td>{{user.USERCODE}}</td>
            </tr>
            <tr ng-switch-when="true">
                <td colspan="2">{{user.USERNAME}}</td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2">
                    <nav>
                        <ul class="pagination">
                            <li>
                                <a href="#" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            <li ng-repeat="i in getNum(pageHelper.pageCount) track by $index">
                                <a href="#" ng-click="setPageNo($index)">{{$index + 1}}</a>
                            </li>
                            <li>
                                <a href="#" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                            <li>
                                <input type="text" ng-model="pageHelper.pageSize" ng-required="true" />
                            </li>
                        </ul>
                    </nav>
                </td>
            </tr>
        </tfoot>
    </table>
    <p></p>
    <table class="table table-bordered table-hover" ng-controller="UserCtrl">
        <thead>
            <tr>
                <th>名称</th>
                <th>编码</th>
            </tr>
        </thead>
        <tbody ng-repeat="user in itemuser =( users | pagination:1:5)"
               ng-click="toggleSelected()" ng-switch on="isSelected()">
            <tr>
                <td>{{user.USERNAME}}</td>
                <td>{{user.USERCODE}}</td>
            </tr>
            <tr ng-switch-when="true">
                <td colspan="2">{{user.USERNAME}}</td>
            </tr>
        </tbody>
    </table>
    <p>过滤</p>
    <div class="well">
        <label>
            过滤：<input type="text" ng-model="criteria" />
        </label>
    </div>
    <table class="table table-bordered" ng-controller="fuser">
        <thead>
            <tr>
                <th ng-click="sort('ROW_ID')">
                    ROW_ID
                    <i ng-class="{'glyphicon glyphicon-chevron-up': isSortUp('ROW_ID'),
                       'glyphicon glyphicon-chevron-down': isSortDown('ROW_ID')}"></i>
                </th>
                <th ng-click="sort('USERNAME')">
                    名称
                    <i ng-class="{'glyphicon glyphicon-chevron-up': isSortUp('USERNAME'),
                       'glyphicon glyphicon-chevron-down': isSortDown('USERNAME')}"></i>
                </th>
                <th ng-click="sort('USERCODE')">
                    编号
                    <i ng-class="{'glyphicon glyphicon-chevron-up': isSortUp('USERCODE'),
                       'glyphicon glyphicon-chevron-down': isSortDown('USERCODE')}"></i>
                </th>
                <th ng-click="sort('PASSWORD')">
                    密码
                    <i ng-class="{'glyphicon glyphicon-chevron-up': isSortUp('PASSWORD'),
                       'glyphicon glyphicon-chevron-down': isSortDown('PASSWORD')}"></i>
                </th>
                <th ng-click="sort('REMARK')">
                    备注
                    <i ng-class="{'glyphicon glyphicon-chevron-up': isSortUp('REMARK'),
                       'glyphicon glyphicon-chevron-down': isSortDown('REMARK')}"></i>
                </th>
                <th ng-click="sort('CREATEDATE')">
                    创建时间
                    <i ng-class="{'glyphicon glyphicon-chevron-up': isSortUp('CREATEDATE'),
                       'glyphicon glyphicon-chevron-down': isSortDown('CREATEDATE')}"></i>
                </th>
            </tr>
        </thead>
        <tbody>
            @*<tr ng-repeat="item in users | filter: { $ : criteria }">*@
            <tr ng-repeat="item in filteredusers =(users| filter: { $ : criteria } | orderBy: sortField: reverse)">
                <td>{{item.ROW_ID}}</td>
                <td>{{item.USERNAME}}</td>
                <td>{{item.USERCODE}}</td>
                <td>{{item.PASSWORD}}</td>
                <td>{{item.REMARK}}</td>
                <td>{{jsonDateFormat(item.CREATEDATE,'yyyy-MM-dd')}}</td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                @*<td colspan="6">ToTal：{{ (users| filter: { $ : criteria }).length}}</td>*@
                <td colspan="6">ToTal：{{ filteredusers.length}}</td> @*不直观*@
            </tr>
        </tfoot>
    </table>
</div>

<script type="text/javascript">
    /*写在前边的话
    *1、一个页面默认只能有一个 app 手动启动angular.bootstrap(document.getElementById("test2"), ['sxb']);
     2、用run方法执行 初始化
    */

    var ajsxb = angular.module('sxb', []);
    //异步ajax请求服务器获取数据，$q data是异步返回的,必须使用$q的promise，增加了cache：true 开启 缓存机制多次调用1次获取
    ajsxb.factory('Users',
        function ($http, $q) {
            return {
                UsersQ: function () {
                    var Udefer = $q.defer();
                    $http.get('../../SYS_USER/GetSYS_USER', { cache: true })
                        .success(function (data, status, headers, config) {
                            Udefer.resolve(data);
                        });
                    return Udefer.promise;
                }
            };
        }
    );

    //根据ngModelController状态判断是否显示错误提示
    ajsxb.factory('Errors',
        function () {
            return {
                ShowError: function (ngModelController, error) {
                    return ngModelController.$error[error];
                }
            };
        }
    );

    //分页过滤
    ajsxb.filter('pagination',
        function () {
            return function (inputArray, selectPage, pageSize) {
                if (inputArray === undefined)
                    return;
                var start = selectPage * pageSize;
                return inputArray.slice(start, start + pageSize);
            };
        }
    );

    //table1 点击展示详细
    ajsxb.controller('GetSYS_USER',
        function ($scope, Users) {
            $scope.pageHelper = {
                pageNo: 0,
                pageSize: 5,
                pageCount: 1
            };

            Users.UsersQ().then(function (data) {
                $scope.users = data;
                $scope.pageHelper.pageCount = Math.ceil(data.length / $scope.pageHelper.pageSize);
            });
            //on-click点击选择选中行
            $scope.selectUser = function (user) {
                $scope.selectedUser = user;
            };
            //判断是否选中行加载ng-swith-when
            $scope.isSelected = function (user) {
                return $scope.selectedUser === user;
            };

            //创建页数数组用于repeat
            $scope.getNum = function (num) {
                return new Array(num);
            };

            $scope.setPageNo = function (num) {
                $scope.pageHelper.pageNo = num;
            };
        }
    );

    //table2
    ajsxb.controller('UserCtrl',
        function ($scope, Users) {
            Users.UsersQ().then(function (data) {
                $scope.users = data
            });

            $scope.toggleSelected = function () {
                $scope.selected = !$scope.selected;
            };

            $scope.isSelected = function () {
                return $scope.selected;
            };
        }
    );

    //过滤 filter
    ajsxb.controller('fuser',
        function ($scope, Users) {
            Users.UsersQ().then(function (data) {
                $scope.users = data
            });

            $scope.jsonDateFormat = jsonDateFormat;
            //初始化 排序对象
            $scope.sortField = undefined;
            $scope.reverse = false;

            //点击排序事件
            $scope.sort = function (fieldName) {
                if ($scope.sortField === fieldName) {
                    $scope.reverse = !$scope.reverse;//逆排
                } else {
                    $scope.sortField = fieldName;//设置排序列
                    $scope.reverse = false;//默认值排序
                }
            };

            //ng-class icon-chevron-up
            $scope.isSortUp = function (fieldName) {
                return $scope.sortField === fieldName && !$scope.reverse;
            };
            $scope.isSortDown = function (fieldName) {
                return $scope.sortField === fieldName && $scope.reverse;
            };
        }
    );

    //日期转换函数
    function jsonDateFormat(jsonDate) {//json日期格式转换为正常格式
        try {//出自http://www.cnblogs.com/ahjesus 尊重作者辛苦劳动成果,转载请注明出处,谢谢!
            var date = new Date(parseInt(jsonDate.replace("/Date(", "").replace(")/", ""), 10));
            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var day = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var hours = date.getHours();
            var minutes = date.getMinutes();
            var seconds = date.getSeconds();
            var milliseconds = date.getMilliseconds();
            return date.getFullYear() + "-" + month + "-" + day + " " + hours + ":" + minutes + ":" + seconds + "." + milliseconds;
        } catch (ex) {//出自http://www.cnblogs.com/ahjesus 尊重作者辛苦劳动成果,转载请注明出处,谢谢!
            return "";
        }
    }

    //------------------------app_add-----------------------
    angular.module('app_add', ['sxb'])

        .controller('newitem',
            function ($scope, Users) {
                Users.UsersQ().then(function (data) {
                    $scope.users = data;
                });

                $scope.countriesByCode = {
                    '中文': 'CH',
                    '英文': 'EN'
                };
            }
        );

    //------------------------app_formError-----------------
    angular.module('app_formError', [])

        .controller('MainCtrl',
            function ($scope) {
                $scope.getCssClasses = function (ngModelController) {
                    return {
                        error: ngModelController.$invalid && ngModelController.$idirty,
                        success: ngModelController.$valid && ngModelController.$dirty
                    };
                };

                //提示文本显示
                $scope.showError = function (ngModelController, error) {
                    return ngModelController.$error[error];
                };

                //保存按钮是否可用
                $scope.canSave = function () {
                    return $scope.userInfoForm.$dirty &&
                        $scope.userInfoForm.$valid;
                };

                //初始化 repeat 数据源
                $scope.user = {
                    websites: [
                        { url: 'http://www.cnblogs.com/sephiroth-wzc/' },
                        { url: 'https://github.com/sephirothwzc' }
                    ]
                };

                //点击x删除内容
                $scope.remove = function (index) {
                    $scope.user.websites.splice(index, 1);
                };

                $scope.addwebsite = function () {
                    $scope.user.websites.push({ url: '' });
                };
            }
        );

    //------------------------app_revert--------------------
    angular.module('app_revert', [])

        .controller('MainCtrl',
            function ($scope) {
                $scope.user = {};

                var original = angular.copy($scope.user);

                $scope.add = function () {
                    original = angular.copy($scope.user);
                    $scope.revertform.$setPristine();
                };

                $scope.revert = function () {
                    $scope.user = original;
                    $scope.revertform.$setPristine();
                };
            }
        );

    //------------------------app_CreateUser----------------
    angular.module('app_CreateUser', ['sxb'])

        .controller('MainCtrl',
            function ($scope, $http, Errors) {
                $scope.showError = Errors.ShowError;

                //保存按钮是否可用
                $scope.canSave = function () {
                    return $scope.CreateForm.$dirty &&
                        $scope.CreateForm.$valid;
                };

                //保存数据
                $scope.Create = function () {
                    $http.post('/SYS_USER/CreateSYS_USER',
                        $scope.user)
                        .success(function (data) {
                            alert(data);
                        });
                };
            }
        );

    //手动启动第1个 ng-app
    angular.bootstrap(document.getElementById("app_add"), ['app_add']);
    //手动启动第二个 ng-app
    angular.bootstrap(document.getElementById("test2"), ['sxb']);

    angular.bootstrap(document.getElementById("userInfo"), ['app_formError']);

    angular.bootstrap(document.getElementById("revertform"), ['app_revert']);
</script>

